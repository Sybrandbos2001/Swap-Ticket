name: CI

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  frontend-tests:
    name: Run Frontend e2e Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci --legacy-peer-deps
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright e2e Tests
        run: npx nx run swap-ticket-app-e2e:e2e -- --reporter=html
      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/swap-ticket-app-e2e/playwright-report
          retention-days: 7

  api-tests:
    name: Run API e2e Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci --legacy-peer-deps
      - name: Install wait-on
        run: npm install -g wait-on
      - name: Build API
        run: npx nx build swap-ticket-api
      - name: Start API Server
        env:
          MONGO_URL: ${{ secrets.MONGO_URL }}
          PORT: ${{ secrets.PORT }}
        run: |
          npx nx serve swap-ticket-api > api-server.log 2>&1 &
          echo "Server started, waiting for it to be ready..."
          wait-on http://localhost:${{ secrets.PORT }}/api -t 60000
      - name: Check API Server Log
        run: cat api-server.log
      - name: Run API e2e Tests
        run: npx nx run swap-ticket-api-e2e:e2e
        continue-on-error: true

  deploy-api:
    name: Deploy API to Heroku
    runs-on: ubuntu-latest
    needs: [api-tests, frontend-tests]
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci --legacy-peer-deps
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          git remote add heroku https://git.heroku.com/${{ env.HEROKU_APP_NAME }}.git
          git push heroku `git subtree split --prefix apps/swap-ticket-api master`:refs/heads/master --force

  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: [api-tests, frontend-tests]
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci --legacy-peer-deps
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm